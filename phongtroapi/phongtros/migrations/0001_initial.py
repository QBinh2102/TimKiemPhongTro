# Generated by Django 5.1.4 on 2025-01-11 15:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import phongtros.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('vi_address', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('thoiGianGui', models.DateTimeField(auto_now_add=True)),
                ('daDoc', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('SDT', models.CharField(max_length=10)),
                ('image', models.ImageField(upload_to='nguoidungs/%Y/%m')),
                ('vaiTro', models.IntegerField(choices=[(1, 'QUANTRIVIEN'), (2, 'CHUNHATRO'), (3, 'NGUOITHUETRO')], default=phongtros.models.VaiTro['QUANTRIVIEN'])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('tuongTac', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Người dùng',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BaiDang',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('tieuDe', models.CharField(max_length=255)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('thongTin', models.TextField()),
                ('nguoiDangBai', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Bài đăng',
            },
        ),
        migrations.CreateModel(
            name='BinhLuan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('thongTin', models.TextField()),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('baiDang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='phongtros.baidang')),
                ('nguoiBinhLuan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChatAnh',
            fields=[
                ('chat_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='phongtros.chat')),
                ('anh', models.ImageField(upload_to='chats/%Y/%m')),
            ],
            options={
                'abstract': False,
            },
            bases=('phongtros.chat',),
        ),
        migrations.CreateModel(
            name='ChatText',
            fields=[
                ('chat_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='phongtros.chat')),
                ('noiDung', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('phongtros.chat',),
        ),
        migrations.AddField(
            model_name='chat',
            name='nguoiGui',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tin_nhan_gui', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chat',
            name='nguoiNhan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tin_nhan_nhan', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Tro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('tenTro', models.CharField(max_length=255)),
                ('diaChi', models.CharField(max_length=255)),
                ('gia', models.PositiveIntegerField()),
                ('soNguoiO', models.SmallIntegerField()),
                ('nguoiChoThue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('phuong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vi_address.ward')),
                ('quan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vi_address.district')),
                ('thanh_pho', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vi_address.city')),
            ],
            options={
                'verbose_name_plural': 'Trọ',
            },
        ),
        migrations.CreateModel(
            name='AnhTro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anh', models.ImageField(upload_to='phongtros/%Y/%m/')),
                ('tro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='phongtros.tro')),
            ],
            options={
                'verbose_name_plural': 'Ảnh Trọ',
            },
        ),
        migrations.CreateModel(
            name='BaiDangChoThue',
            fields=[
                ('baidang_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='phongtros.baidang')),
                ('troChoThue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='phongtros.tro')),
            ],
            options={
                'verbose_name_plural': 'Bài đăng cho thuê',
            },
            bases=('phongtros.baidang',),
        ),
    ]
